{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BHASKAR\\\\Desktop\\\\React_Folder\\\\Pixel\\\\pexal\\\\src\\\\Pages\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport \"../../src/style.css\";\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [loginname, setloginname] = useState(\"\");\n  const [loginpsd, setloginpsd] = useState(\"\");\n  const [loginemail, setloginemail] = useState(\"\");\n  let reg_name = window.sessionStorage.getItem(\"username\");\n  let psd_name = window.sessionStorage.getItem(\"password\");\n  let email_name;\n  let nav = useNavigate();\n  function loginvalid() {\n    if (reg_name === loginname && psd_name === loginpsd) {\n      nav(\"/\");\n    } else {\n      alert(\"Invalid Credientels\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"login-title\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: loginvalid,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input-label\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          className: \"input-box\",\n          value: loginname,\n          onChange: b => {\n            setloginname(b.target.value);\n          },\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input-label\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          className: \"input-box\",\n          value: loginpsd,\n          onChange: b => {\n            setloginpsd(b.target.value);\n          },\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-button\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"WCQxnCPivXeX5nOJvfTkhnYT7w0=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Login","_s","loginname","setloginname","loginpsd","setloginpsd","loginemail","setloginemail","reg_name","window","sessionStorage","getItem","psd_name","email_name","nav","loginvalid","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","name","value","onChange","b","target","required","_c","$RefreshReg$"],"sources":["C:/Users/BHASKAR/Desktop/React_Folder/Pixel/pexal/src/Pages/Login.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport \"../../src/style.css\"\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction Login() {\r\n  const [loginname,setloginname]=useState(\"\")\r\n  const [loginpsd,setloginpsd]=useState(\"\")\r\n  const [loginemail,setloginemail]=useState(\"\")\r\n  let reg_name=window.sessionStorage.getItem(\"username\")\r\n  let psd_name=window.sessionStorage.getItem(\"password\")\r\n  let email_name\r\n  let nav=useNavigate()\r\n  function loginvalid(){\r\n    if (reg_name===loginname && psd_name===loginpsd)\r\n    {\r\n      nav(\"/\")\r\n    }\r\n    else{\r\n      alert(\"Invalid Credientels\")\r\n    }\r\n  }\r\n \r\n\r\n  return (\r\n    <div className=\"login-form-container\">\r\n    <h2 className=\"login-title\">Login</h2>\r\n    <form onSubmit={loginvalid}>\r\n      <div className=\"input-group\">\r\n        <label className=\"input-label\">Email</label>\r\n        <input \r\n          type=\"email\" \r\n          name=\"email\" \r\n          className=\"input-box\"\r\n          value={loginname} \r\n          onChange={(b)=>{setloginname(b.target.value)}} \r\n          required \r\n        />\r\n      </div>\r\n      <div className=\"input-group\">\r\n        <label className=\"input-label\">Password</label>\r\n        <input \r\n          type=\"password\" \r\n          name=\"password\" \r\n          className=\"input-box\"\r\n          value={loginpsd} \r\n          onChange={(b)=>{setloginpsd(b.target.value)}} \r\n          required \r\n        />\r\n      </div>\r\n      <button type=\"submit\" className=\"submit-button\">Login</button>\r\n    </form>\r\n  </div>\r\n  \r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}